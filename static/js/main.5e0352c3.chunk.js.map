{"version":3,"sources":["context/MealContext.js","components/ApplicationBar/ApplicationBar.js","components/Category/Category.js","components/Meal/Meal.js","components/Spinner/Spinner.js","components/Meals/Meals.js","services/BaseService.js","services/MealService.js","components/MealDetail/MealDetail.js","context/MealProvider.js","components/App/App.js","serviceWorker.js","index.js"],"names":["MealContext","React","createContext","ApplicationBar","handleLogo","_this","props","history","push","_this2","this","classes","react_default","a","createElement","context_MealContext","Consumer","context","className","root","AppBar_default","position","Toolbar_default","Typography_default","onClick","title","variant","color","noWrap","grow","Fragment","Link","to","IconButton_default","Badge_default","badgeContent","favoriteMeals","length","showZero","Component","withStyles","theme","width","cursor","flexGrow","Category","categoryName","selectedCategoryName","categories","List_default","dense","map","category","ListItem_default","key","idCategory","button","handleCategoryClick","strCategory","ListItemAvatar_default","Avatar_default","alt","src","strCategoryThumb","ListItemText_default","primary","ListItemSecondaryAction_default","Checkbox_default","onChange","checked","isChecked","renderCategoryList","maxWidth","backgroundColor","palette","background","paper","Meal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isFavoriteMeal","setFavoriteMeal","meal","filter","favMeal","idMeal","setState","nextProps","_this$props","concat","Card_default","defineProperty","card","CardActionArea_default","CardMedia_default","media","image","strMealThumb","strMeal","CardContent_default","headerText","gutterBottom","component","CardActions_default","actions","disableActionSpacing","aria-label","e","handleFavMeal","favClassName","minWidth","height","paddingTop","display","justifyContent","whiteSpace","overflow","textOverflow","spinnerStyle","top","left","transform","Spinner","style","CircularProgress_default","Meals","handleBackButton","meals","components_Meal_Meal","components_Spinner_Spinner","textAlign","path","renderFavMeals","renderMeals","location","pathname","renderDetail","get","url","axios","BASEURL","MealService","mealId","mealName","mealService","MealDetail","mealDetail","id","match","params","getMealDetailById","data","console","log","_context","t0","strInstructions","MealProvider","getMealsByCategoryName","preventDefault","find","splice","findIndex","i","toConsumableArray","getMealCategories","getLatestMeals","_context2","_context3","Provider","value","children","App","MealProvider_MealProvider","Route","exact","Boolean","window","hostname","ReactDOM","render","BrowserRouter","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e0352c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MealContext = React.createContext();\r\n\r\nexport default MealContext;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MealContext from \"../../context/MealContext\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    cursor: 'pointer'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  }\r\n});\r\n\r\nclass ApplicationBar extends Component {\r\n\r\n  handleLogo = () => {\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <MealContext.Consumer>\r\n        {(context) => (\r\n          <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n              <Toolbar>\r\n                <Typography onClick={this.handleLogo} className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>Meal App</Typography>\r\n                <div className={classes.grow} />\r\n                <React.Fragment>\r\n                  <Link to=\"/fav\">\r\n                    <IconButton color=\"inherit\">\r\n                      <Badge badgeContent={context.favoriteMeals.length} showZero color=\"secondary\">\r\n                        <i className=\"fa fa-heart\"></i>\r\n                      </Badge>\r\n                    </IconButton>\r\n                  </Link>\r\n                </React.Fragment>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        )}\r\n      </MealContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ApplicationBar);","import React, { Component } from 'react';\r\nimport './Category.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport MealContext from \"../../context/MealContext\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass Category extends Component {\r\n\r\n    isChecked(categoryName, selectedCategoryName) {\r\n        if (categoryName === selectedCategoryName)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    renderCategoryList(context) {\r\n        const { classes } = this.props;\r\n        let { categories } = context;\r\n        return (\r\n            <div className=\"category-container\">\r\n                <List dense className={classes.root}>\r\n                    {categories.map(category => (\r\n                        <ListItem className=\"category-list-container\" key={category.idCategory} button onClick={() => context.handleCategoryClick(category.strCategory)}>\r\n                            <ListItemAvatar>\r\n                                <Avatar alt=\"\" src={category.strCategoryThumb} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText className=\"category-name\" primary={category.strCategory} />\r\n                            <ListItemSecondaryAction className=\"category-checkbox\">\r\n                                <Checkbox onChange={() => context.handleCategoryClick(category.strCategory)} checked={this.isChecked(category.strCategory, context.selectedCategoryName)} />\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MealContext.Consumer>\r\n                    {(context) => (\r\n                        this.renderCategoryList(context)\r\n                    )}\r\n                </MealContext.Consumer>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Category);","import React, { Component } from 'react';\r\nimport './Meal.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    card: {\r\n        maxWidth: 345,\r\n        minWidth: 345\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%'\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    headerText:{\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    }\r\n};\r\n\r\nclass Meal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFavoriteMeal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setFavoriteMeal(this.props);\r\n    }\r\n\r\n    setFavoriteMeal(props) {\r\n        let { meal, favoriteMeals } = props;\r\n        let result = favoriteMeals.filter((favMeal) => {\r\n            return favMeal.idMeal === meal.idMeal\r\n        });\r\n\r\n        if (result.length === 1) {\r\n            this.setState({\r\n                isFavoriteMeal: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isFavoriteMeal: false\r\n            })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (this.props.favoriteMeals.length === nextProps.favoriteMeals.length) {\r\n            this.setFavoriteMeal(nextProps);\r\n        } else if (this.props.favoriteMeals.length !== nextProps.favoriteMeals.length) {\r\n            this.setFavoriteMeal(nextProps);\r\n        }\r\n    }\r\n\r\n    favClassName() {\r\n        let { isFavoriteMeal } = this.state;\r\n        if (isFavoriteMeal) {\r\n            return \"fa fa-heart favMeal\"\r\n        }\r\n        else {\r\n            return \"fa fa-heart\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, meal, context } = this.props;\r\n        return (\r\n            <Link to={`/detail/${meal.idMeal}`}>\r\n                <Card className={classes.card} className=\"meal-card\">\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={meal.strMealThumb ? meal.strMealThumb : 'https://via.placeholder.com/200'}\r\n                            title={meal.strMeal}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography className={classes.headerText} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {meal.strMeal}\r\n                            </Typography>\r\n                            <Typography component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                      across all continents except Antarctica\r\n                    </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions className={classes.actions} disableActionSpacing>\r\n                        <IconButton aria-label=\"Add to favorites\" onClick={(e) => context.handleFavMeal(e, meal)}>\r\n                            <i className={this.favClassName()}></i>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Meal);","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst spinnerStyle = {\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  position: \"absolute\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div style={spinnerStyle}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Meals.css\";\r\nimport Meal from \"../Meal/Meal\";\r\nimport MealContext from \"../../context/MealContext\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nexport default class Meals extends Component {\r\n  handleBackButton = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  renderMeals(context) {\r\n    let { meals, favoriteMeals } = context;\r\n    if (meals.length > 0) {\r\n      return (\r\n        <div className=\"meals-container\">\r\n          {meals.map(meal => (\r\n            <React.Fragment key={meal.idMeal}>\r\n              <Meal\r\n                meal={meal}\r\n                favoriteMeals={favoriteMeals}\r\n                context={context}\r\n              />\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n\r\n  renderFavMeals(context) {\r\n    let { favoriteMeals } = context;\r\n    if (favoriteMeals.length > 0) {\r\n      return (\r\n        <div className=\"fav-meals-container\">\r\n          {favoriteMeals.map(favMeal => (\r\n            <React.Fragment key={favMeal.idMeal}>\r\n              <Meal\r\n                meal={favMeal}\r\n                favoriteMeals={favoriteMeals}\r\n                context={context}\r\n              />\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h3>Please add meals to your favorites one</h3>\r\n          <div style={{ cursor: \"pointer\" }} onClick={this.handleBackButton}>\r\n            Back\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderDetail(context, path) {\r\n    if (path === \"/fav\") {\r\n      return this.renderFavMeals(context);\r\n    } else {\r\n      return this.renderMeals(context);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let path = this.props.location.pathname;\r\n    return (\r\n      <React.Fragment>\r\n        <MealContext.Consumer>\r\n          {context => this.renderDetail(context, path)}\r\n        </MealContext.Consumer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport function get(url){\r\n    return axios.get(url);\r\n}\r\n\r\nexport function post(url,message){\r\n    return axios.post(url,message);\r\n}","import {get} from './BaseService';\r\nconst BASEURL = \"https://www.themealdb.com/api/json/v1/1/\";\r\n\r\nexport default class MealService {\r\n\r\n    getMealCategories(){\r\n        const url = `${BASEURL}categories.php`;\r\n        return get(url);\r\n    }\r\n\r\n    getMealsByCategoryName(categoryName){\r\n        const url = `${BASEURL}filter.php?c=${categoryName}`;\r\n        return get(url);\r\n    }\r\n\r\n    getMealDetailById(mealId){\r\n        const url = `${BASEURL}lookup.php?i=${mealId}`;\r\n        return get(url);\r\n    }\r\n\r\n    getMealsByName(mealName){\r\n        const url = `${BASEURL}search.php?s=${mealName}`;\r\n        return get(url);\r\n    }\r\n\r\n    getRandomMeal(){\r\n        const url = `${BASEURL}random.php`;\r\n        return get(url);\r\n    }\r\n\r\n    getLatestMeals(){\r\n        const url = `${BASEURL}latest.php`;\r\n        return get(url);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./MealDetail.css\";\r\nimport MealService from \"../../services/MealService\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst mealService = new MealService();\r\nexport default class MealDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mealDetail: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    this.getMealDetailById(id);\r\n  }\r\n\r\n  async getMealDetailById(id) {\r\n    try {\r\n      let mealDetail = await mealService.getMealDetailById(id);\r\n      mealDetail = mealDetail.data.meals;\r\n\r\n      this.setState({\r\n        mealDetail\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { mealDetail } = this.state;\r\n    mealDetail = mealDetail[0];\r\n    if (mealDetail) {\r\n      return (\r\n        <div className=\"meal-detail-container\">\r\n          <div className=\"meal-header\">{mealDetail.strMeal}</div>\r\n          <div className=\"meal-img-container\">\r\n            <img src={mealDetail.strMealThumb} alt=\"\" />\r\n          </div>\r\n          <div className=\"meal-instruction\">{mealDetail.strInstructions}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MealContext from \"./MealContext\";\r\nimport MealService from \"../services/MealService\";\r\n\r\nconst mealService = new MealService();\r\nexport default class MealProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            selectedCategoryName: '',\r\n            meals: [],\r\n            favoriteMeals: [],\r\n            handleCategoryClick: this.handleCategoryClick,\r\n            handleFavMeal: this.handleFavMeal\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMealCategories();\r\n        this.getLatestMeals();\r\n    }\r\n\r\n    async getMealCategories() {\r\n        try {\r\n            let categories = await mealService.getMealCategories();\r\n            categories = categories.data.categories;\r\n            this.setState({\r\n                categories\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async getLatestMeals() {\r\n        try {\r\n            let meals = await mealService.getLatestMeals();\r\n            meals = meals.data.meals;\r\n            this.setState({\r\n                meals\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async getMealsByCategoryName(categoryName) {\r\n        try {\r\n            let meals = await mealService.getMealsByCategoryName(categoryName);\r\n            meals = meals.data.meals;\r\n            this.setState({\r\n                meals\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleCategoryClick = (categoryName) => {\r\n        let { selectedCategoryName } = this.state;\r\n        if (categoryName !== selectedCategoryName)\r\n            this.setState({\r\n                selectedCategoryName: categoryName\r\n            }, () => {\r\n                this.getMealsByCategoryName(categoryName);\r\n            });\r\n    }\r\n\r\n    handleFavMeal = (e, meal) => {\r\n        e.preventDefault();\r\n        let { favoriteMeals } = this.state;\r\n        let result = favoriteMeals.find((favMeal) => {\r\n            return favMeal.idMeal === meal.idMeal\r\n        });\r\n        if (result) {\r\n            //remove\r\n            favoriteMeals.splice(favoriteMeals.findIndex((i) => {\r\n                return i.idMeal === meal.idMeal\r\n            }), 1);\r\n            this.setState({\r\n                favoriteMeals: favoriteMeals\r\n            });\r\n        } else {\r\n            //add\r\n            this.setState({\r\n                favoriteMeals: [...favoriteMeals, meal]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MealContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </MealContext.Provider>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport ApplicationBar from \"../ApplicationBar/ApplicationBar\";\r\nimport Category from \"../Category/Category\";\r\nimport Meals from '../Meals/Meals';\r\nimport MealDetail from \"../MealDetail/MealDetail\";\r\nimport MealProvider from \"../../context/MealProvider\";\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <MealProvider>\r\n        <div className=\"application-container\">\r\n          <Route path=\"/\" component={ApplicationBar} />\r\n          <div className=\"category-and-card-container\">\r\n            <Route exact path='/' component={Category} />\r\n            <Route exact path=\"/\" component={Meals} />\r\n            <Route path=\"/detail/:id\" component={MealDetail} />\r\n            <Route path=\"/fav\" component={Meals} />\r\n          </div>\r\n        </div>\r\n      </MealProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n<Router>\r\n<App />\r\n</Router>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}